import ProjectDescription

let project = Project(name: "Mupen64PlusDeltaCore",
                      packages: [],
                      targets: [
                        Target(name: "Mupen64PlusDeltaCore",
                               platform: .iOS,
                               product: .framework,
                               bundleId: "com.rileytestut.mupen64PlusDeltaCore",
                               deploymentTarget: .iOS(targetVersion: "12.0", devices: [.iphone, .ipad]),
                               infoPlist: .extendingDefault(with: [:]),
                               sources: [
                                "Sources/**/*.{m,swift}",
                                "Mupen64Plus/mupen64plus-core/src/device/dd/dd_controller.c",
                                "Mupen64Plus/mupen64plus-core/src/backends/api/video_capture_backend.c",
                                "Mupen64Plus/mupen64plus-core/src/device/controllers/paks/biopak.c",
                                "Mupen64Plus/mupen64plus-core/src/backends/dummy_video_capture.c",
                               ],
                               resources: ["Resources/**/*.{deltamapping,deltaskin}", "Mupen64Plus/**/*.ini"],
                               headers: Headers(public: ["Sources/Mupen64PlusDeltaCore.h", "Sources/Bridge/Mupen64PlusEmulatorBridge.h"], project: "Sources/Types/Mupen64PlusTypes.h"),
                               dependencies: [
                                .project(target: "DeltaCore", path: "../DeltaCore"),
                                .target(name: "libMupen64Plus")
                               ],
                               settings: Settings(base: [
                                "HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/mupen64plus-core/subprojects\"/** \"$(SRCROOT)/libMupen64Plus/SDL\" \"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src\" \"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src/api\" \"$(SRCROOT)/Mupen64Plus/GLideN64/src\"",
                                "USER_HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src\" \"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src/api\" \"$(SRCROOT)/Mupen64Plus/GLideN64/src\"",
                               ])),
                        Target(name: "libMupen64Plus",
                               platform: .iOS,
                               product: .staticLibrary,
                               bundleId: "com.rileytestut.libMupen64Plus",
                               deploymentTarget: .iOS(targetVersion: "12.0", devices: [.iphone, .ipad]),
                               infoPlist: .extendingDefault(with: [:]),
                               sources: [
                                "libMupen64Plus/**/*.{h,m,mm,c,cpp}",
                                SourceFileGlob("Mupen64Plus/mupen64plus-core/**/*.{h,m,mm,c,cpp}", excluding: [
                                  "Mupen64Plus/mupen64plus-core/src/api/vidext.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/asm_defines/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/backends/api/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/backends/dummy_video_capture.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/backends/opencv_video_capture.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/debugger/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/controllers/paks/biopak.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/dd/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/r4300/new_dynarec/**/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/r4300/x86/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/r4300/x86_64/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/r4300/instr_counters.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/device/r4300/recomp.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/main/eventloop.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/main/screenshot.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/osal/dynamiclib_*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/osal/files_unix.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/osal/files_win32.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/src/osd/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/subprojects/oglft/*.{c,cpp}",
                                  "Mupen64Plus/mupen64plus-core/tools/*.{c,cpp}"
                                ]),
                               ],
                               settings: Settings(base: [
                                "OTHER_CFLAGS": "$(inherited) -DM64P_PARALLEL=1 -DIN_OPENEMU=1 -DNO_ASM=1 -DM64P_CORE_PROTOTYPES=1 -DNDEBUG=1 -DPIC=1 -flto -fomit-frame-pointer -DUSE_GLES=1",
                                "HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src\" \"$(SRCROOT)/libMupen64Plus/SDL\" \"$(SRCROOT)/Mupen64Plus/mupen64plus-core/subprojects\"/**",
                               ])),
                        Target(name: "mupen64plus-rsp-hle",
                               platform: .iOS,
                               product: .framework,
                               bundleId: "com.rileytestut.mupen64PlusRSPHLE",
                               deploymentTarget: .iOS(targetVersion: "12.0", devices: [.iphone, .ipad]),
                               infoPlist: .extendingDefault(with: [:]),
                               sources: [
                                "Sources/mupen64plus-rsp-hle-plugin.c",
                                SourceFileGlob("Mupen64Plus/mupen64plus-rsp-hle/src/*.{h,c}", excluding: [
                                  "Mupen64Plus/mupen64plus-rsp-hle/src/osal_dynamiclib_unix.c",
                                    "Mupen64Plus/mupen64plus-rsp-hle/src/osal_dynamiclib_win32.c",
                                    "Mupen64Plus/mupen64plus-rsp-hle/src/plugin.c",
                                    "Mupen64Plus/mupen64plus-rsp-hle/src/memory.h"
                                ]),
                               ],
                               headers: Headers(project: ["Mupen64Plus/mupen64plus-rsp-hle/src/**/*"]),
                               settings: Settings(base: [
                                "HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src/api\"",
                                "OTHER_CFLAGS": "-fno-strict-aliasing -DGCC -pthread -fPIC -D__unix__ -ffast-math",
                               ])),
                        Target(name: "mupen64plus-video-GLideN64",
                               platform: .iOS,
                               product: .framework,
                               bundleId: "com.rileytestut.mupen64PlusVideoGlideN64",
                               deploymentTarget: .iOS(targetVersion: "12.0", devices: [.iphone, .ipad]),
                               infoPlist: .extendingDefault(with: [:]),
                               sources: [
                                "Sources/mupen64plus-video-GLideN64-plugin.cpp",
                                "**/3DMath.cpp",
                                "**/ClipPolygon.cpp",
                                "**/ColorBufferReader.cpp",
                                "**/ColorBufferToRDRAM.cpp",
                                "**/Combiner.cpp",
                                "**/CombinerKey.cpp",
                                "**/CombinerProgram.cpp",
                                "**/CommonAPIImpl_common.cpp",
                                "**/Config.cpp",
                                "**/Context.cpp",
                                "**/convert.cpp",
                                "**/CRC_OPT.cpp",
                                "**/DebugDump.cpp",
                                "**/Debugger.cpp",
                                "**/DepthBuffer.cpp",
                                "**/DepthBufferRender.cpp",
                                "**/DepthBufferToRDRAM.cpp",
                                "**/DisplayLoadProgress.cpp",
                                "**/DisplayWindow.cpp",
                                "**/F3D.cpp",
                                "**/F3DAM.cpp",
                                "**/F3DBETA.cpp",
                                "**/F3DDKR.cpp",
                                "**/F3DEX.cpp",
                                "**/F3DEX2.cpp",
                                "**/F3DEX2ACCLAIM.cpp",
                                "**/F3DEX2CBFD.cpp",
                                "**/F3DFLX2.cpp",
                                "**/F3DGOLDEN.cpp",
                                "**/F3DPD.cpp",
                                "**/F3DSETA.cpp",
                                "**/F3DTEXA.cpp",
                                "**/F3DZEX2.cpp",
                                "**/F5Indi_Naboo.cpp",
                                "**/F5Rogue.cpp",
                                "**/FrameBuffer.cpp",
                                "**/FrameBufferInfo.cpp",
                                "**/GBI.cpp",
                                "**/gDP.cpp",
                                "**/GLFunctions.cpp",
                                "**/GLideN64.cpp",
                                "**/glsl_CombinerInputs.cpp",
                                "**/glsl_CombinerProgramBuilder.cpp",
                                "**/glsl_CombinerProgramImpl.cpp",
                                "**/glsl_CombinerProgramUniformFactory.cpp",
                                "**/glsl_FXAA.cpp",
                                "**/glsl_ShaderStorage.cpp",
                                "**/glsl_SpecialShadersFactory.cpp",
                                "**/glsl_Utils.cpp",
                                "**/GraphicsDrawer.cpp",
                                "**/gSP.cpp",
                                "**/Keys.cpp",
                                "**/L3D.cpp",
                                "**/L3DEX.cpp",
                                "**/L3DEX2.cpp",
                                "**/Log_ios.mm",
                                "**/MemoryStatus_mupenplus.cpp",
                                "**/mupen64plus_DisplayWindow.cpp",
                                "**/N64.cpp",
                                "**/NoiseTexture.cpp",
                                "**/ObjectHandle.cpp",
                                "**/opengl_Attributes.cpp",
                                "**/opengl_BufferedDrawer.cpp",
                                "**/opengl_BufferManipulationObjectFactory.cpp",
                                "**/opengl_CachedFunctions.cpp",
                                "**/opengl_ColorBufferReaderWithBufferStorage.cpp",
                                "**/opengl_ColorBufferReaderWithPixelBuffer.cpp",
                                "**/opengl_ColorBufferReaderWithReadPixels.cpp",
                                "**/opengl_ContextImpl.cpp",
                                "**/opengl_GLInfo.cpp",
                                "**/opengl_Parameters.cpp",
                                "**/opengl_TextureManipulationObjectFactory.cpp",
                                "**/opengl_UnbufferedDrawer.cpp",
                                "**/opengl_Utils.cpp",
                                "**/osal_files_ios.mm",
                                "**/PaletteTexture.cpp",
                                "**/Performance.cpp",
                                "**/png.c",
                                "**/pngerror.c",
                                "**/pngget.c",
                                "**/pngmem.c",
                                "**/pngpread.c",
                                "**/pngread.c",
                                "**/pngrio.c",
                                "**/pngrtran.c",
                                "**/pngrutil.c",
                                "**/pngset.c",
                                "**/pngtest.c",
                                "**/pngtrans.c",
                                "**/pngwio.c",
                                "**/pngwrite.c",
                                "**/pngwtran.c",
                                "**/pngwutil.c",
                                "**/PostProcessor.cpp",
                                "**/RDP.cpp",
                                "**/RDRAMtoColorBuffer.cpp",
                                "**/RSP_LoadMatrix.cpp",
                                "**/RSP.cpp",
                                "**/S2DEX.cpp",
                                "**/S2DEX2.cpp",
                                "**/SoftwareRender.cpp",
                                "**/T3DUX.cpp",
                                "**/TexrectDrawer.cpp",
                                "**/TextDrawerStub.cpp",
                                "**/TextureFilterHandler.cpp",
                                "**/TextureFilters_2xsai.cpp",
                                "**/TextureFilters_hq2x.cpp",
                                "**/TextureFilters_hq4x.cpp",
                                "**/TextureFilters_xbrz.cpp",
                                "**/TextureFilters.cpp",
                                "**/Textures.cpp",
                                "**/Turbo3D.cpp",
                                "**/TxCache.cpp",
                                "**/TxDbg_ios.mm",
                                "**/TxFilter.cpp",
                                "**/TxFilterExport.cpp",
                                "**/TxHiResCache.cpp",
                                "**/TxImage.cpp",
                                "**/TxQuantize.cpp",
                                "**/TxReSample.cpp",
                                "**/TxTexCache.cpp",
                                "**/TxUtil.cpp",
                                "**/txWidestringWrapper.cpp",
                                "**/VI.cpp",
                                "**/xxhash.c",
                                "**/ZlutTexture.cpp",
                                "**/ZSort.cpp",
                                "**/ZSortBOSS.cpp",
                               ],
                               headers: Headers(private: ["**/*"]),
                               dependencies: [
                                .sdk(name: "OpenGLES.framework", status: .required),
                                .sdk(name: "libz.tbd"),
                               ],
                               settings: Settings(base: [
                                "HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/GLideN64/src/\" \"$(SRCROOT)/Mupen64Plus/GLideN64/src/inc/\"",
                                "USER_HEADER_SEARCH_PATHS": "\"$(SRCROOT)/Mupen64Plus/GLideN64/src/\" \"$(SRCROOT)/Mupen64Plus/mupen64plus-core/src\"",
                                "ALWAYS_SEARCH_USER_PATHS": "YES",
                                "OTHER_CFLAGS": "-fno-strict-aliasing -DGCC -pthread -fPIC -D__unix__ -ffast-math -D__VEC4_OPT -fvisibility=hidden",
                                "OTHER_LDFLAGS": "-Wl,-exported_symbol,_Video_PluginStartup,-exported_symbol,_Video_PluginShutdown,-exported_symbol,_Video_PluginGetVersion,-exported_symbol,_Video_RomOpen,-exported_symbol,_Video_RomClosed,-exported_symbol,_ConfigGetSharedDataFilepath,-exported_symbol,_ConfigGetUserConfigPath,-exported_symbol,_ConfigGetUserCachePath,-exported_symbol,_ConfigGetUserDataPath,-exported_symbol,_ConfigOpenSection,-exported_symbol,_ConfigDeleteSection,-exported_symbol,_ConfigSaveSection,-exported_symbol,_ConfigSaveFile,-exported_symbol,_ConfigSetDefaultInt,-exported_symbol,_ConfigSetDefaultFloat,-exported_symbol,_ConfigSetDefaultBool,-exported_symbol,_ConfigSetDefaultString,-exported_symbol,_ConfigGetParamInt,-exported_symbol,_ConfigGetParamFloat,-exported_symbol,_ConfigGetParamBool,-exported_symbol,_ConfigGetParamString,-exported_symbol,_ConfigExternalGetParameter,-exported_symbol,_ConfigExternalOpen,-exported_symbol,_ConfigExternalClose,-exported_symbol,_VidExt_Init,-exported_symbol,_VidExt_Quit,-exported_symbol,_VidExt_ListFullscreenModes,-exported_symbol,_VidExt_SetVideoMode,-exported_symbol,_VidExt_SetCaption,-exported_symbol,_VidExt_ToggleFullScreen,-exported_symbol,_VidExt_ResizeWindow,-exported_symbol,_VidExt_GL_GetProcAddress,-exported_symbol,_VidExt_GL_SetAttribute,-exported_symbol,_VidExt_GL_GetAttribute,-exported_symbol,_VidExt_GL_SwapBuffers,-exported_symbol,_ChangeWindow,-exported_symbol,_InitiateGFX,-exported_symbol,_MoveScreen,-exported_symbol,_ProcessDList,-exported_symbol,_ProcessRDPList,-exported_symbol,_ShowCFB,-exported_symbol,_UpdateScreen,-exported_symbol,_ViStatusChanged,-exported_symbol,_ViWidthChanged,-exported_symbol,_ReadScreen2,-exported_symbol,_SetRenderingCallback,-exported_symbol,_FBRead,-exported_symbol,_FBWrite,-exported_symbol,_FBGetFrameBufferInfo,-exported_symbol,_ResizeVideoOutput,-exported_symbol,_RSP_PluginStartup,-exported_symbol,_RSP_PluginShutdown,-exported_symbol,_RSP_PluginGetVersion,-exported_symbol,_DoRspCycles,-exported_symbol,_InitiateRSP,-exported_symbol,_RSP_RomClosed,-exported_symbol,_CoreGetAPIVersions,-exported_symbol,_ConfigGetParameter,-exported_symbol,_ConfigSetParameter,-exported_symbol,_CoreDoCommand",
                                "GCC_PREPROCESSOR_DEFINITIONS": "MUPENPLUSAPI TXFILTER_LIB OS_IOS GLESX GL_ERROR_DEBUG GL_DEBUG GLESX PNG_ARM_NEON_OPT=0",
                               ])),
                      ])
